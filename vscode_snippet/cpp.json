{
  "Print to console": {
    "prefix": "cpptemplate",
    "body": [
      "/**",
      " * author: Zama",
      " * created: $CURRENT_YEAR.$CURRENT_MONTH.$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " **/",
      "",
      "#include <bits/stdc++.h>",
      "",
      "using namespace std;",
      "",
      "#ifdef LOCAL",
      "#include <debug_print.hpp>",
      "#define debug(...) debug_print::multi_print(#__VA_ARGS__, __VA_ARGS__)",
      "#else",
      "#define debug(...) (static_cast<void>(0))",
      "#endif",
      "",
      "#if __has_include(<atcoder/all>)",
      "#include <atcoder/all>",
      "using namespace atcoder;",
      "#endif",
      "",
      "using ull = unsigned long long;",
      "using ll = long long;",
      "using vi = vector<int>;",
      "using vl = vector<long>;",
      "using vll = vector<long long>;",
      "using vvi = vector<vi>;",
      "using vvl = vector<vl>;",
      "using vvll = vector<vll>;",
      "using vs = vector<string>;",
      "using pii = pair<int, int>;",
      "using pllll = pair<ll, ll>;",
      "// using mint = modint1000000007;",
      "// using mint = modint998244353;",
      "",
      "#define OVERLOAD_REP(_1, _2, _3, name, ...) name",
      "#define REP1(i, n) for (auto i = std::decay_t<decltype(n)>{}; (i) < (n); ++(i))",
      "#define REP2(i, l, r) for (auto i = (l); (i) < (r); ++(i))",
      "#define rep(...) OVERLOAD_REP(__VA_ARGS__, REP2, REP1)(__VA_ARGS__)",
      "#define all(...) std::begin(__VA_ARGS__), std::end(__VA_ARGS__)",
      "#define rall(...) std::rbegin(__VA_ARGS__), std::rend(__VA_ARGS__)",
      "#define pb push_back",
      "",
      "inline void YESNO(bool condition) {",
      "  cout << (condition ? \"YES\\n\" : \"NO\\n\");",
      "}",
      "inline void yesno(bool condition) {",
      "  cout << (condition ? \"yes\\n\" : \"no\\n\");",
      "}",
      "inline void YesNo(bool condition) {",
      "  cout << (condition ? \"Yes\\n\" : \"No\\n\");",
      "}",
      "",
      "template <typename T>",
      "inline void print(const vector<T> &v, string s = \" \") {",
      "  rep (i, v.size()) cout << v[i] << (i != (ll)v.size() - 1 ? s : \"\\n\");",
      "}",
      "template <typename T, typename S>",
      "inline void print(const pair<T, S> &p) {",
      "  cout << p.first << \" \" << p.second << \"\\n\";",
      "}",
      "template <typename T>",
      "inline void print(const T &x) {",
      "  cout << x << \"\\n\";",
      "}",
      "template <typename T, typename S>",
      "inline void print(const vector<pair<T, S>> &v) {",
      "  for (auto &&p : v) print(p);",
      "}",
      "template <class T>",
      "inline bool chmax(T &a, T b) {",
      "  if (a < b) {",
      "    a = b;",
      "    return 1;",
      "  }",
      "  return 0;",
      "}",
      "template <class T>",
      "inline bool chmin(T &a, T b) {",
      "  if (a > b) {",
      "    a = b;",
      "    return 1;",
      "  }",
      "  return 0;",
      "}",
      "",
      "const long long INF = 1LL << 60;",
      "",
      "int main() {",
      "  $0",
      "",
      "  return 0;",
      "}"
    ],
    "description": "cpp_template"
  },
  "rep_i_macro": {
    "prefix": "repi",
    "body": ["rep (i, $1) {", "  $0", "}"],
    "description": "rep_macro"
  },
  "rep_j_macro": {
    "prefix": "repj",
    "body": ["rep (j, $1) {", "  $0", "}"],
    "description": "rep_macro"
  },
  "rep_k_macro": {
    "prefix": "repj",
    "body": ["rep (k, $1) {", "  $0", "}"],
    "description": "rep_macro"
  },
  "cin1": {
    "prefix": "cin1",
    "body": ["cin >> $1;"],
    "description": "cin1"
  },
  "cin2": {
    "prefix": "cin2",
    "body": ["cin >> $1 >> $2;"],
    "description": "cin2"
  },
  "cin3": {
    "prefix": "cin3",
    "body": ["cin >> $1 >> $2 >> $3;"],
    "description": "cin3"
  }
}
